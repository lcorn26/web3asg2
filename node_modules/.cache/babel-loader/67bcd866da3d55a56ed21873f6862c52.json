{"ast":null,"code":"import * as React from 'react';\nexport default function useCacheOptions(options) {\n  var prevOptionMapRef = React.useRef(null);\n  var optionMap = React.useMemo(function () {\n    var map = new Map();\n    options.forEach(function (item) {\n      var value = item.value;\n      map.set(value, item);\n    });\n    return map;\n  }, [options]);\n  prevOptionMapRef.current = optionMap;\n\n  var getValueOption = function getValueOption(valueList) {\n    return valueList.map(function (value) {\n      return prevOptionMapRef.current.get(value);\n    }).filter(Boolean);\n  };\n\n  return getValueOption;\n}","map":{"version":3,"sources":["D:/Documents/School Stuff/Web 3/ASG 2/web3asg2/node_modules/rc-select/es/hooks/useCacheOptions.js"],"names":["React","useCacheOptions","options","prevOptionMapRef","useRef","optionMap","useMemo","map","Map","forEach","item","value","set","current","getValueOption","valueList","get","filter","Boolean"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,eAAe,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAC/C,MAAIC,gBAAgB,GAAGH,KAAK,CAACI,MAAN,CAAa,IAAb,CAAvB;AACA,MAAIC,SAAS,GAAGL,KAAK,CAACM,OAAN,CAAc,YAAY;AACxC,QAAIC,GAAG,GAAG,IAAIC,GAAJ,EAAV;AACAN,IAAAA,OAAO,CAACO,OAAR,CAAgB,UAAUC,IAAV,EAAgB;AAC9B,UAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACAJ,MAAAA,GAAG,CAACK,GAAJ,CAAQD,KAAR,EAAeD,IAAf;AACD,KAHD;AAIA,WAAOH,GAAP;AACD,GAPe,EAOb,CAACL,OAAD,CAPa,CAAhB;AAQAC,EAAAA,gBAAgB,CAACU,OAAjB,GAA2BR,SAA3B;;AAEA,MAAIS,cAAc,GAAG,SAASA,cAAT,CAAwBC,SAAxB,EAAmC;AACtD,WAAOA,SAAS,CAACR,GAAV,CAAc,UAAUI,KAAV,EAAiB;AACpC,aAAOR,gBAAgB,CAACU,OAAjB,CAAyBG,GAAzB,CAA6BL,KAA7B,CAAP;AACD,KAFM,EAEJM,MAFI,CAEGC,OAFH,CAAP;AAGD,GAJD;;AAMA,SAAOJ,cAAP;AACD","sourcesContent":["import * as React from 'react';\nexport default function useCacheOptions(options) {\n  var prevOptionMapRef = React.useRef(null);\n  var optionMap = React.useMemo(function () {\n    var map = new Map();\n    options.forEach(function (item) {\n      var value = item.value;\n      map.set(value, item);\n    });\n    return map;\n  }, [options]);\n  prevOptionMapRef.current = optionMap;\n\n  var getValueOption = function getValueOption(valueList) {\n    return valueList.map(function (value) {\n      return prevOptionMapRef.current.get(value);\n    }).filter(Boolean);\n  };\n\n  return getValueOption;\n}"]},"metadata":{},"sourceType":"module"}