{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport TableContext from '../context/TableContext';\nimport ExpandedRow from './ExpandedRow';\nimport BodyContext from '../context/BodyContext';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport ResizeContext from '../context/ResizeContext';\nimport MeasureCell from './MeasureCell';\nimport BodyRow from './BodyRow';\nimport useFlattenRecords from '../hooks/useFlattenRecords';\nimport HoverContext from '../context/HoverContext';\n\nfunction Body(_ref) {\n  var data = _ref.data,\n      getRowKey = _ref.getRowKey,\n      measureColumnWidth = _ref.measureColumnWidth,\n      expandedKeys = _ref.expandedKeys,\n      onRow = _ref.onRow,\n      rowExpandable = _ref.rowExpandable,\n      emptyNode = _ref.emptyNode,\n      childrenColumnName = _ref.childrenColumnName;\n\n  var _React$useState = React.useState(-1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      startRow = _React$useState2[0],\n      setStartRow = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      endRow = _React$useState4[0],\n      setEndRow = _React$useState4[1];\n\n  var _React$useContext = React.useContext(ResizeContext),\n      onColumnResize = _React$useContext.onColumnResize;\n\n  var _React$useContext2 = React.useContext(TableContext),\n      prefixCls = _React$useContext2.prefixCls,\n      getComponent = _React$useContext2.getComponent;\n\n  var _React$useContext3 = React.useContext(BodyContext),\n      fixHeader = _React$useContext3.fixHeader,\n      horizonScroll = _React$useContext3.horizonScroll,\n      flattenColumns = _React$useContext3.flattenColumns,\n      componentWidth = _React$useContext3.componentWidth;\n\n  var flattenData = useFlattenRecords(data, childrenColumnName, expandedKeys, getRowKey);\n  var onHover = React.useCallback(function (start, end) {\n    setStartRow(start);\n    setEndRow(end);\n  }, []);\n  var hoverContext = React.useMemo(function () {\n    return {\n      startRow: startRow,\n      endRow: endRow,\n      onHover: onHover\n    };\n  }, [onHover, startRow, endRow]);\n  return React.useMemo(function () {\n    var WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n    var trComponent = getComponent(['body', 'row'], 'tr');\n    var tdComponent = getComponent(['body', 'cell'], 'td');\n    var rows;\n\n    if (data.length) {\n      rows = flattenData.map(function (item, index) {\n        var record = item.record,\n            indent = item.indent;\n        var key = getRowKey(record, index);\n        return /*#__PURE__*/React.createElement(BodyRow, {\n          key: key,\n          rowKey: key,\n          record: record,\n          recordKey: key,\n          index: index,\n          rowComponent: trComponent,\n          cellComponent: tdComponent,\n          expandedKeys: expandedKeys,\n          onRow: onRow,\n          getRowKey: getRowKey,\n          rowExpandable: rowExpandable,\n          childrenColumnName: childrenColumnName,\n          indent: indent\n        });\n      });\n    } else {\n      rows = /*#__PURE__*/React.createElement(ExpandedRow, {\n        expanded: true,\n        className: \"\".concat(prefixCls, \"-placeholder\"),\n        prefixCls: prefixCls,\n        fixHeader: fixHeader,\n        fixColumn: horizonScroll,\n        horizonScroll: horizonScroll,\n        component: trComponent,\n        componentWidth: componentWidth,\n        cellComponent: tdComponent,\n        colSpan: flattenColumns.length\n      }, emptyNode);\n    }\n\n    var columnsKey = getColumnsKey(flattenColumns);\n    return /*#__PURE__*/React.createElement(HoverContext.Provider, {\n      value: hoverContext\n    }, /*#__PURE__*/React.createElement(WrapperComponent, {\n      className: \"\".concat(prefixCls, \"-tbody\")\n    }, measureColumnWidth && /*#__PURE__*/React.createElement(\"tr\", {\n      \"aria-hidden\": \"true\",\n      className: \"\".concat(prefixCls, \"-measure-row\"),\n      style: {\n        height: 0,\n        fontSize: 0\n      }\n    }, columnsKey.map(function (columnKey) {\n      return /*#__PURE__*/React.createElement(MeasureCell, {\n        key: columnKey,\n        columnKey: columnKey,\n        onColumnResize: onColumnResize\n      });\n    })), rows));\n  }, [data, prefixCls, onRow, measureColumnWidth, expandedKeys, getRowKey, getComponent, componentWidth, emptyNode, flattenColumns, childrenColumnName, fixHeader, horizonScroll, onColumnResize, rowExpandable, flattenData, hoverContext]);\n}\n\nvar MemoBody = /*#__PURE__*/React.memo(Body);\nMemoBody.displayName = 'Body';\nexport default MemoBody;","map":{"version":3,"sources":["D:/Documents/School Stuff/Web 3/ASG 2/web3asg2/node_modules/rc-table/es/Body/index.js"],"names":["_slicedToArray","React","TableContext","ExpandedRow","BodyContext","getColumnsKey","ResizeContext","MeasureCell","BodyRow","useFlattenRecords","HoverContext","Body","_ref","data","getRowKey","measureColumnWidth","expandedKeys","onRow","rowExpandable","emptyNode","childrenColumnName","_React$useState","useState","_React$useState2","startRow","setStartRow","_React$useState3","_React$useState4","endRow","setEndRow","_React$useContext","useContext","onColumnResize","_React$useContext2","prefixCls","getComponent","_React$useContext3","fixHeader","horizonScroll","flattenColumns","componentWidth","flattenData","onHover","useCallback","start","end","hoverContext","useMemo","WrapperComponent","trComponent","tdComponent","rows","length","map","item","index","record","indent","key","createElement","rowKey","recordKey","rowComponent","cellComponent","expanded","className","concat","fixColumn","component","colSpan","columnsKey","Provider","value","style","height","fontSize","columnKey","MemoBody","memo","displayName"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport TableContext from '../context/TableContext';\nimport ExpandedRow from './ExpandedRow';\nimport BodyContext from '../context/BodyContext';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport ResizeContext from '../context/ResizeContext';\nimport MeasureCell from './MeasureCell';\nimport BodyRow from './BodyRow';\nimport useFlattenRecords from '../hooks/useFlattenRecords';\nimport HoverContext from '../context/HoverContext';\n\nfunction Body(_ref) {\n  var data = _ref.data,\n      getRowKey = _ref.getRowKey,\n      measureColumnWidth = _ref.measureColumnWidth,\n      expandedKeys = _ref.expandedKeys,\n      onRow = _ref.onRow,\n      rowExpandable = _ref.rowExpandable,\n      emptyNode = _ref.emptyNode,\n      childrenColumnName = _ref.childrenColumnName;\n\n  var _React$useState = React.useState(-1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      startRow = _React$useState2[0],\n      setStartRow = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      endRow = _React$useState4[0],\n      setEndRow = _React$useState4[1];\n\n  var _React$useContext = React.useContext(ResizeContext),\n      onColumnResize = _React$useContext.onColumnResize;\n\n  var _React$useContext2 = React.useContext(TableContext),\n      prefixCls = _React$useContext2.prefixCls,\n      getComponent = _React$useContext2.getComponent;\n\n  var _React$useContext3 = React.useContext(BodyContext),\n      fixHeader = _React$useContext3.fixHeader,\n      horizonScroll = _React$useContext3.horizonScroll,\n      flattenColumns = _React$useContext3.flattenColumns,\n      componentWidth = _React$useContext3.componentWidth;\n\n  var flattenData = useFlattenRecords(data, childrenColumnName, expandedKeys, getRowKey);\n  var onHover = React.useCallback(function (start, end) {\n    setStartRow(start);\n    setEndRow(end);\n  }, []);\n  var hoverContext = React.useMemo(function () {\n    return {\n      startRow: startRow,\n      endRow: endRow,\n      onHover: onHover\n    };\n  }, [onHover, startRow, endRow]);\n  return React.useMemo(function () {\n    var WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n    var trComponent = getComponent(['body', 'row'], 'tr');\n    var tdComponent = getComponent(['body', 'cell'], 'td');\n    var rows;\n\n    if (data.length) {\n      rows = flattenData.map(function (item, index) {\n        var record = item.record,\n            indent = item.indent;\n        var key = getRowKey(record, index);\n        return /*#__PURE__*/React.createElement(BodyRow, {\n          key: key,\n          rowKey: key,\n          record: record,\n          recordKey: key,\n          index: index,\n          rowComponent: trComponent,\n          cellComponent: tdComponent,\n          expandedKeys: expandedKeys,\n          onRow: onRow,\n          getRowKey: getRowKey,\n          rowExpandable: rowExpandable,\n          childrenColumnName: childrenColumnName,\n          indent: indent\n        });\n      });\n    } else {\n      rows = /*#__PURE__*/React.createElement(ExpandedRow, {\n        expanded: true,\n        className: \"\".concat(prefixCls, \"-placeholder\"),\n        prefixCls: prefixCls,\n        fixHeader: fixHeader,\n        fixColumn: horizonScroll,\n        horizonScroll: horizonScroll,\n        component: trComponent,\n        componentWidth: componentWidth,\n        cellComponent: tdComponent,\n        colSpan: flattenColumns.length\n      }, emptyNode);\n    }\n\n    var columnsKey = getColumnsKey(flattenColumns);\n    return /*#__PURE__*/React.createElement(HoverContext.Provider, {\n      value: hoverContext\n    }, /*#__PURE__*/React.createElement(WrapperComponent, {\n      className: \"\".concat(prefixCls, \"-tbody\")\n    }, measureColumnWidth && /*#__PURE__*/React.createElement(\"tr\", {\n      \"aria-hidden\": \"true\",\n      className: \"\".concat(prefixCls, \"-measure-row\"),\n      style: {\n        height: 0,\n        fontSize: 0\n      }\n    }, columnsKey.map(function (columnKey) {\n      return /*#__PURE__*/React.createElement(MeasureCell, {\n        key: columnKey,\n        columnKey: columnKey,\n        onColumnResize: onColumnResize\n      });\n    })), rows));\n  }, [data, prefixCls, onRow, measureColumnWidth, expandedKeys, getRowKey, getComponent, componentWidth, emptyNode, flattenColumns, childrenColumnName, fixHeader, horizonScroll, onColumnResize, rowExpandable, flattenData, hoverContext]);\n}\n\nvar MemoBody = /*#__PURE__*/React.memo(Body);\nMemoBody.displayName = 'Body';\nexport default MemoBody;"]},"metadata":{},"sourceType":"module"}