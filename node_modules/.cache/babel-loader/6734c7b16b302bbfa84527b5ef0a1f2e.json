{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isLeaf } from '../util';\nimport CascaderContext from '../context';\nimport Checkbox from './Checkbox';\nexport default function Column(_ref) {\n  var prefixCls = _ref.prefixCls,\n      index = _ref.index,\n      multiple = _ref.multiple,\n      options = _ref.options,\n      openKey = _ref.openKey,\n      onSelect = _ref.onSelect,\n      onOpen = _ref.onOpen,\n      onToggleOpen = _ref.onToggleOpen,\n      checkedSet = _ref.checkedSet,\n      halfCheckedSet = _ref.halfCheckedSet,\n      loadingKeys = _ref.loadingKeys;\n  var menuPrefixCls = \"\".concat(prefixCls, \"-menu\");\n  var menuItemPrefixCls = \"\".concat(prefixCls, \"-menu-item\");\n\n  var _React$useContext = React.useContext(CascaderContext),\n      changeOnSelect = _React$useContext.changeOnSelect,\n      expandTrigger = _React$useContext.expandTrigger,\n      expandIcon = _React$useContext.expandIcon,\n      loadingIcon = _React$useContext.loadingIcon,\n      dropdownMenuColumnStyle = _React$useContext.dropdownMenuColumnStyle;\n\n  var hoverOpen = expandTrigger === 'hover'; // ============================ Render ============================\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: menuPrefixCls,\n    role: \"menu\"\n  }, options.map(function (option) {\n    var _classNames;\n\n    var disabled = option.disabled,\n        value = option.value,\n        node = option.node;\n    var isMergedLeaf = isLeaf(option);\n    var isLoading = loadingKeys.includes(value); // >>>>> checked\n\n    var checked = checkedSet.has(value); // >>>>> Open\n\n    var triggerOpenPath = function triggerOpenPath() {\n      if (!disabled && (!hoverOpen || !isMergedLeaf)) {\n        onOpen(index, value);\n      }\n    }; // >>>>> Selection\n\n\n    var triggerSelect = function triggerSelect() {\n      if (!disabled && (isMergedLeaf || changeOnSelect || multiple)) {\n        onSelect(value, isMergedLeaf);\n      }\n    }; // >>>>> Title\n\n\n    var title;\n\n    if (typeof (node === null || node === void 0 ? void 0 : node.title) === 'string') {\n      title = node.title;\n    } else if (typeof option.title === 'string') {\n      title = option.title;\n    } // >>>>> Render\n\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: value,\n      className: classNames(menuItemPrefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-expand\"), !isMergedLeaf), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-active\"), openKey === value), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-loading\"), isLoading), _classNames)),\n      style: dropdownMenuColumnStyle,\n      role: \"menuitemcheckbox\",\n      title: title,\n      \"aria-checked\": checked,\n      \"data-value\": value,\n      onClick: function onClick() {\n        triggerOpenPath();\n\n        if (!multiple || isMergedLeaf) {\n          triggerSelect();\n        }\n      },\n      onDoubleClick: function onDoubleClick() {\n        if (changeOnSelect) {\n          onToggleOpen(false);\n        }\n      },\n      onMouseEnter: function onMouseEnter() {\n        if (hoverOpen) {\n          triggerOpenPath();\n        }\n      }\n    }, multiple && /*#__PURE__*/React.createElement(Checkbox, {\n      prefixCls: \"\".concat(prefixCls, \"-checkbox\"),\n      checked: checked,\n      halfChecked: halfCheckedSet.has(value),\n      disabled: disabled,\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        triggerSelect();\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-content\")\n    }, option.title), !isLoading && expandIcon && !isMergedLeaf && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-expand-icon\")\n    }, expandIcon), isLoading && loadingIcon && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-loading-icon\")\n    }, loadingIcon));\n  }));\n}","map":{"version":3,"sources":["D:/Documents/School Stuff/Web 3/ASG 2/web3asg2/node_modules/rc-cascader/es/OptionList/Column.js"],"names":["_defineProperty","React","classNames","isLeaf","CascaderContext","Checkbox","Column","_ref","prefixCls","index","multiple","options","openKey","onSelect","onOpen","onToggleOpen","checkedSet","halfCheckedSet","loadingKeys","menuPrefixCls","concat","menuItemPrefixCls","_React$useContext","useContext","changeOnSelect","expandTrigger","expandIcon","loadingIcon","dropdownMenuColumnStyle","hoverOpen","createElement","className","role","map","option","_classNames","disabled","value","node","isMergedLeaf","isLoading","includes","checked","has","triggerOpenPath","triggerSelect","title","key","style","onClick","onDoubleClick","onMouseEnter","halfChecked","e","stopPropagation"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isLeaf } from '../util';\nimport CascaderContext from '../context';\nimport Checkbox from './Checkbox';\nexport default function Column(_ref) {\n  var prefixCls = _ref.prefixCls,\n      index = _ref.index,\n      multiple = _ref.multiple,\n      options = _ref.options,\n      openKey = _ref.openKey,\n      onSelect = _ref.onSelect,\n      onOpen = _ref.onOpen,\n      onToggleOpen = _ref.onToggleOpen,\n      checkedSet = _ref.checkedSet,\n      halfCheckedSet = _ref.halfCheckedSet,\n      loadingKeys = _ref.loadingKeys;\n  var menuPrefixCls = \"\".concat(prefixCls, \"-menu\");\n  var menuItemPrefixCls = \"\".concat(prefixCls, \"-menu-item\");\n\n  var _React$useContext = React.useContext(CascaderContext),\n      changeOnSelect = _React$useContext.changeOnSelect,\n      expandTrigger = _React$useContext.expandTrigger,\n      expandIcon = _React$useContext.expandIcon,\n      loadingIcon = _React$useContext.loadingIcon,\n      dropdownMenuColumnStyle = _React$useContext.dropdownMenuColumnStyle;\n\n  var hoverOpen = expandTrigger === 'hover'; // ============================ Render ============================\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: menuPrefixCls,\n    role: \"menu\"\n  }, options.map(function (option) {\n    var _classNames;\n\n    var disabled = option.disabled,\n        value = option.value,\n        node = option.node;\n    var isMergedLeaf = isLeaf(option);\n    var isLoading = loadingKeys.includes(value); // >>>>> checked\n\n    var checked = checkedSet.has(value); // >>>>> Open\n\n    var triggerOpenPath = function triggerOpenPath() {\n      if (!disabled && (!hoverOpen || !isMergedLeaf)) {\n        onOpen(index, value);\n      }\n    }; // >>>>> Selection\n\n\n    var triggerSelect = function triggerSelect() {\n      if (!disabled && (isMergedLeaf || changeOnSelect || multiple)) {\n        onSelect(value, isMergedLeaf);\n      }\n    }; // >>>>> Title\n\n\n    var title;\n\n    if (typeof (node === null || node === void 0 ? void 0 : node.title) === 'string') {\n      title = node.title;\n    } else if (typeof option.title === 'string') {\n      title = option.title;\n    } // >>>>> Render\n\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: value,\n      className: classNames(menuItemPrefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-expand\"), !isMergedLeaf), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-active\"), openKey === value), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(menuItemPrefixCls, \"-loading\"), isLoading), _classNames)),\n      style: dropdownMenuColumnStyle,\n      role: \"menuitemcheckbox\",\n      title: title,\n      \"aria-checked\": checked,\n      \"data-value\": value,\n      onClick: function onClick() {\n        triggerOpenPath();\n\n        if (!multiple || isMergedLeaf) {\n          triggerSelect();\n        }\n      },\n      onDoubleClick: function onDoubleClick() {\n        if (changeOnSelect) {\n          onToggleOpen(false);\n        }\n      },\n      onMouseEnter: function onMouseEnter() {\n        if (hoverOpen) {\n          triggerOpenPath();\n        }\n      }\n    }, multiple && /*#__PURE__*/React.createElement(Checkbox, {\n      prefixCls: \"\".concat(prefixCls, \"-checkbox\"),\n      checked: checked,\n      halfChecked: halfCheckedSet.has(value),\n      disabled: disabled,\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        triggerSelect();\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-content\")\n    }, option.title), !isLoading && expandIcon && !isMergedLeaf && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-expand-icon\")\n    }, expandIcon), isLoading && loadingIcon && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(menuItemPrefixCls, \"-loading-icon\")\n    }, loadingIcon));\n  }));\n}"]},"metadata":{},"sourceType":"module"}