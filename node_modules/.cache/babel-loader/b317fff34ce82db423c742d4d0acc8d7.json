{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"checkable\", \"changeOnSelect\", \"children\", \"options\", \"onChange\", \"value\", \"defaultValue\", \"popupVisible\", \"open\", \"dropdownClassName\", \"popupClassName\", \"onDropdownVisibleChange\", \"onPopupVisibleChange\", \"popupPlacement\", \"placement\", \"searchValue\", \"onSearch\", \"showSearch\", \"expandTrigger\", \"expandIcon\", \"loadingIcon\", \"displayRender\", \"loadData\", \"dropdownMenuColumnStyle\", \"dropdownPrefixCls\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport generate from \"rc-tree-select/es/generate\";\nimport OptionList from './OptionList';\nimport CascaderContext from './context';\nimport { connectValue, convertOptions, fillFieldNames, restoreCompatibleValue, splitValue } from './util';\nimport useUpdateEffect from './hooks/useUpdateEffect';\nimport useSearchConfig from './hooks/useSearchConfig';\nvar INTERNAL_VALUE_FIELD = '__rc_cascader_value__';\n/**\n * `rc-cascader` is much like `rc-tree-select` but API is very different.\n * It's caused that component developer is not same person\n * and we do not rice the API naming standard at that time.\n *\n * To avoid breaking change, wrap the `rc-tree-select` to compatible with `rc-cascader` API.\n * This should be better to merge to same API like `rc-tree-select` or `rc-select` in next major version.\n *\n * Update:\n * - dropdown class change to `rc-cascader-dropdown`\n * - direction rtl keyboard\n *\n * Deprecated:\n * - popupVisible\n * - hidePopupOnSelect\n *\n * Removed:\n * - builtinPlacements: Handle by select\n */\n\nvar RefCascader = generate({\n  prefixCls: 'rc-cascader',\n  optionList: OptionList\n});\n\nfunction defaultDisplayRender(labels) {\n  return labels.join(' / ');\n}\n\nvar Cascader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var checkable = props.checkable,\n      changeOnSelect = props.changeOnSelect,\n      children = props.children,\n      options = props.options,\n      onChange = props.onChange,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      popupVisible = props.popupVisible,\n      open = props.open,\n      dropdownClassName = props.dropdownClassName,\n      popupClassName = props.popupClassName,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      onPopupVisibleChange = props.onPopupVisibleChange,\n      popupPlacement = props.popupPlacement,\n      placement = props.placement,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      showSearch = props.showSearch,\n      expandTrigger = props.expandTrigger,\n      _props$expandIcon = props.expandIcon,\n      expandIcon = _props$expandIcon === void 0 ? '>' : _props$expandIcon,\n      loadingIcon = props.loadingIcon,\n      _props$displayRender = props.displayRender,\n      displayRender = _props$displayRender === void 0 ? defaultDisplayRender : _props$displayRender,\n      loadData = props.loadData,\n      dropdownMenuColumnStyle = props.dropdownMenuColumnStyle,\n      dropdownPrefixCls = props.dropdownPrefixCls,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var fieldNames = restProps.fieldNames; // ============================ Ref =============================\n\n  var cascaderRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        cascaderRef.current.focus();\n      },\n      blur: function blur() {\n        cascaderRef.current.blur();\n      }\n    };\n  });\n\n  var getEntityByValue = function getEntityByValue(val) {\n    return cascaderRef.current.getEntityByValue(val);\n  }; // =========================== Search ===========================\n\n\n  var _useMergedState = useMergedState(undefined, {\n    value: searchValue,\n    onChange: onSearch\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearch = _useMergedState2[0],\n      setMergedSearch = _useMergedState2[1];\n\n  var _useSearchConfig = useSearchConfig(showSearch),\n      _useSearchConfig2 = _slicedToArray(_useSearchConfig, 2),\n      mergedShowSearch = _useSearchConfig2[0],\n      searchConfig = _useSearchConfig2[1]; // ========================== Options ===========================\n\n\n  var outerFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  }, [fieldNames]);\n  var mergedFieldNames = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, outerFieldNames), {}, {\n      value: INTERNAL_VALUE_FIELD\n    });\n  }, [outerFieldNames]);\n  var mergedOptions = React.useMemo(function () {\n    return convertOptions(options, outerFieldNames, INTERNAL_VALUE_FIELD);\n  }, [options, outerFieldNames]); // =========================== Value ============================\n\n  /**\n   * Always pass props value to last value unit:\n   * - single: ['light', 'little'] => ['light__little']\n   * - multiple: [['light', 'little'], ['bamboo']] => ['light__little', 'bamboo']\n   */\n\n  var parseToInternalValue = function parseToInternalValue(propValue) {\n    var propValueList = [];\n\n    if (propValue) {\n      propValueList = checkable ? propValue : [propValue];\n    }\n\n    return propValueList.map(connectValue);\n  };\n\n  var _React$useState = React.useState(function () {\n    return parseToInternalValue(value || defaultValue);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      internalValue = _React$useState2[0],\n      setInternalValue = _React$useState2[1];\n\n  useUpdateEffect(function () {\n    setInternalValue(parseToInternalValue(value));\n  }, [value]); // =========================== Label ============================\n\n  var labelRender = function labelRender(entity, val) {\n    var fieldLabel = mergedFieldNames.label;\n\n    if (!entity) {\n      var valPath = splitValue(val);\n      return displayRender(valPath, []);\n    }\n\n    if (checkable) {\n      return entity.data.node[fieldLabel];\n    }\n\n    var _restoreCompatibleVal = restoreCompatibleValue(entity, mergedFieldNames),\n        selectedOptions = _restoreCompatibleVal.options;\n\n    var rawOptions = selectedOptions.map(function (opt) {\n      return opt.node;\n    });\n    var labelList = rawOptions.map(function (opt) {\n      return opt[fieldLabel];\n    });\n    return displayRender(labelList, rawOptions);\n  }; // =========================== Change ===========================\n\n\n  var onInternalChange = function onInternalChange(newValue\n  /** Not care current type */\n  ) {\n    // TODO: Need improve motion experience\n    setMergedSearch('');\n    var valueList = checkable ? newValue : [newValue];\n    var pathList = [];\n    var optionsList = [];\n    var valueEntities = valueList.map(getEntityByValue).filter(function (entity) {\n      return entity;\n    });\n    valueEntities.forEach(function (entity) {\n      var _restoreCompatibleVal2 = restoreCompatibleValue(entity, mergedFieldNames),\n          valueOptions = _restoreCompatibleVal2.options;\n\n      var originOptions = valueOptions.map(function (option) {\n        return option.node;\n      });\n      pathList.push(originOptions.map(function (opt) {\n        return (// Here we should use original FieldNames value mapping\n          opt[outerFieldNames.value]\n        );\n      }));\n      optionsList.push(originOptions);\n    }); // Fill state\n\n    if (value === undefined) {\n      setInternalValue(valueList);\n    }\n\n    if (onChange) {\n      if (checkable) {\n        onChange(pathList, optionsList);\n      } else {\n        // TODO: This should return null as other component.\n        // But its a breaking change and we should keep the logic.\n        onChange(pathList[0] || [], optionsList[0] || []);\n      }\n    }\n  }; // ============================ Open ============================\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!onPopupVisibleChange, '`onPopupVisibleChange` is deprecated. Please use `onDropdownVisibleChange` instead.');\n    warning(popupVisible === undefined, '`popupVisible` is deprecated. Please use `open` instead.');\n    warning(popupClassName === undefined, '`popupClassName` is deprecated. Please use `dropdownClassName` instead.');\n    warning(popupPlacement === undefined, '`popupPlacement` is deprecated. Please use `placement` instead.');\n  }\n\n  var mergedOpen = open !== undefined ? open : popupVisible;\n  var mergedDropdownClassName = dropdownClassName || popupClassName;\n  var mergedPlacement = placement || popupPlacement;\n\n  var onInternalDropdownVisibleChange = function onInternalDropdownVisibleChange(nextVisible) {\n    onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextVisible);\n    onPopupVisibleChange === null || onPopupVisibleChange === void 0 ? void 0 : onPopupVisibleChange(nextVisible);\n  }; // ========================== Context ===========================\n\n\n  var context = React.useMemo(function () {\n    return {\n      changeOnSelect: changeOnSelect,\n      expandTrigger: expandTrigger,\n      fieldNames: mergedFieldNames,\n      expandIcon: expandIcon,\n      loadingIcon: loadingIcon,\n      loadData: loadData,\n      dropdownMenuColumnStyle: dropdownMenuColumnStyle,\n      search: searchConfig,\n      dropdownPrefixCls: dropdownPrefixCls\n    };\n  }, [changeOnSelect, expandTrigger, mergedFieldNames, expandIcon, loadingIcon, loadData, dropdownMenuColumnStyle, searchConfig, dropdownPrefixCls]); // =========================== Render ===========================\n\n  var dropdownStyle = // Search to match width\n  mergedSearch && searchConfig.matchInputWidth || // Empty keep the width\n  !mergedOptions.length ? {} : {\n    minWidth: 'auto'\n  };\n  return /*#__PURE__*/React.createElement(CascaderContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(RefCascader, _extends({\n    ref: cascaderRef\n  }, restProps, {\n    fieldNames: mergedFieldNames,\n    value: checkable ? internalValue : internalValue[0],\n    placement: mergedPlacement,\n    dropdownMatchSelectWidth: false,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: mergedDropdownClassName,\n    treeData: mergedOptions,\n    treeCheckable: checkable,\n    treeNodeFilterProp: \"label\",\n    onChange: onInternalChange,\n    showCheckedStrategy: RefCascader.SHOW_PARENT,\n    open: mergedOpen,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange,\n    searchValue: mergedSearch // Customize filter logic in OptionList\n    ,\n    filterTreeNode: function filterTreeNode() {\n      return true;\n    },\n    showSearch: mergedShowSearch,\n    onSearch: setMergedSearch,\n    labelRender: labelRender,\n    getRawInputElement: function getRawInputElement() {\n      return children;\n    }\n  })));\n});\nCascader.displayName = 'Cascader';\nexport default Cascader;","map":{"version":3,"sources":["D:/Documents/School Stuff/Web 3/ASG 2/web3asg2/node_modules/rc-cascader/es/Cascader.js"],"names":["_extends","_objectSpread","_slicedToArray","_objectWithoutProperties","_excluded","React","warning","useMergedState","generate","OptionList","CascaderContext","connectValue","convertOptions","fillFieldNames","restoreCompatibleValue","splitValue","useUpdateEffect","useSearchConfig","INTERNAL_VALUE_FIELD","RefCascader","prefixCls","optionList","defaultDisplayRender","labels","join","Cascader","forwardRef","props","ref","checkable","changeOnSelect","children","options","onChange","value","defaultValue","popupVisible","open","dropdownClassName","popupClassName","onDropdownVisibleChange","onPopupVisibleChange","popupPlacement","placement","searchValue","onSearch","showSearch","expandTrigger","_props$expandIcon","expandIcon","loadingIcon","_props$displayRender","displayRender","loadData","dropdownMenuColumnStyle","dropdownPrefixCls","restProps","fieldNames","cascaderRef","useRef","useImperativeHandle","focus","current","blur","getEntityByValue","val","_useMergedState","undefined","_useMergedState2","mergedSearch","setMergedSearch","_useSearchConfig","_useSearchConfig2","mergedShowSearch","searchConfig","outerFieldNames","useMemo","mergedFieldNames","mergedOptions","parseToInternalValue","propValue","propValueList","map","_React$useState","useState","_React$useState2","internalValue","setInternalValue","labelRender","entity","fieldLabel","label","valPath","data","node","_restoreCompatibleVal","selectedOptions","rawOptions","opt","labelList","onInternalChange","newValue","valueList","pathList","optionsList","valueEntities","filter","forEach","_restoreCompatibleVal2","valueOptions","originOptions","option","push","process","env","NODE_ENV","mergedOpen","mergedDropdownClassName","mergedPlacement","onInternalDropdownVisibleChange","nextVisible","context","search","dropdownStyle","matchInputWidth","length","minWidth","createElement","Provider","dropdownMatchSelectWidth","treeData","treeCheckable","treeNodeFilterProp","showCheckedStrategy","SHOW_PARENT","filterTreeNode","getRawInputElement","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"checkable\", \"changeOnSelect\", \"children\", \"options\", \"onChange\", \"value\", \"defaultValue\", \"popupVisible\", \"open\", \"dropdownClassName\", \"popupClassName\", \"onDropdownVisibleChange\", \"onPopupVisibleChange\", \"popupPlacement\", \"placement\", \"searchValue\", \"onSearch\", \"showSearch\", \"expandTrigger\", \"expandIcon\", \"loadingIcon\", \"displayRender\", \"loadData\", \"dropdownMenuColumnStyle\", \"dropdownPrefixCls\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport generate from \"rc-tree-select/es/generate\";\nimport OptionList from './OptionList';\nimport CascaderContext from './context';\nimport { connectValue, convertOptions, fillFieldNames, restoreCompatibleValue, splitValue } from './util';\nimport useUpdateEffect from './hooks/useUpdateEffect';\nimport useSearchConfig from './hooks/useSearchConfig';\nvar INTERNAL_VALUE_FIELD = '__rc_cascader_value__';\n/**\n * `rc-cascader` is much like `rc-tree-select` but API is very different.\n * It's caused that component developer is not same person\n * and we do not rice the API naming standard at that time.\n *\n * To avoid breaking change, wrap the `rc-tree-select` to compatible with `rc-cascader` API.\n * This should be better to merge to same API like `rc-tree-select` or `rc-select` in next major version.\n *\n * Update:\n * - dropdown class change to `rc-cascader-dropdown`\n * - direction rtl keyboard\n *\n * Deprecated:\n * - popupVisible\n * - hidePopupOnSelect\n *\n * Removed:\n * - builtinPlacements: Handle by select\n */\n\nvar RefCascader = generate({\n  prefixCls: 'rc-cascader',\n  optionList: OptionList\n});\n\nfunction defaultDisplayRender(labels) {\n  return labels.join(' / ');\n}\n\nvar Cascader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var checkable = props.checkable,\n      changeOnSelect = props.changeOnSelect,\n      children = props.children,\n      options = props.options,\n      onChange = props.onChange,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      popupVisible = props.popupVisible,\n      open = props.open,\n      dropdownClassName = props.dropdownClassName,\n      popupClassName = props.popupClassName,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      onPopupVisibleChange = props.onPopupVisibleChange,\n      popupPlacement = props.popupPlacement,\n      placement = props.placement,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      showSearch = props.showSearch,\n      expandTrigger = props.expandTrigger,\n      _props$expandIcon = props.expandIcon,\n      expandIcon = _props$expandIcon === void 0 ? '>' : _props$expandIcon,\n      loadingIcon = props.loadingIcon,\n      _props$displayRender = props.displayRender,\n      displayRender = _props$displayRender === void 0 ? defaultDisplayRender : _props$displayRender,\n      loadData = props.loadData,\n      dropdownMenuColumnStyle = props.dropdownMenuColumnStyle,\n      dropdownPrefixCls = props.dropdownPrefixCls,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var fieldNames = restProps.fieldNames; // ============================ Ref =============================\n\n  var cascaderRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        cascaderRef.current.focus();\n      },\n      blur: function blur() {\n        cascaderRef.current.blur();\n      }\n    };\n  });\n\n  var getEntityByValue = function getEntityByValue(val) {\n    return cascaderRef.current.getEntityByValue(val);\n  }; // =========================== Search ===========================\n\n\n  var _useMergedState = useMergedState(undefined, {\n    value: searchValue,\n    onChange: onSearch\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearch = _useMergedState2[0],\n      setMergedSearch = _useMergedState2[1];\n\n  var _useSearchConfig = useSearchConfig(showSearch),\n      _useSearchConfig2 = _slicedToArray(_useSearchConfig, 2),\n      mergedShowSearch = _useSearchConfig2[0],\n      searchConfig = _useSearchConfig2[1]; // ========================== Options ===========================\n\n\n  var outerFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  }, [fieldNames]);\n  var mergedFieldNames = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, outerFieldNames), {}, {\n      value: INTERNAL_VALUE_FIELD\n    });\n  }, [outerFieldNames]);\n  var mergedOptions = React.useMemo(function () {\n    return convertOptions(options, outerFieldNames, INTERNAL_VALUE_FIELD);\n  }, [options, outerFieldNames]); // =========================== Value ============================\n\n  /**\n   * Always pass props value to last value unit:\n   * - single: ['light', 'little'] => ['light__little']\n   * - multiple: [['light', 'little'], ['bamboo']] => ['light__little', 'bamboo']\n   */\n\n  var parseToInternalValue = function parseToInternalValue(propValue) {\n    var propValueList = [];\n\n    if (propValue) {\n      propValueList = checkable ? propValue : [propValue];\n    }\n\n    return propValueList.map(connectValue);\n  };\n\n  var _React$useState = React.useState(function () {\n    return parseToInternalValue(value || defaultValue);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      internalValue = _React$useState2[0],\n      setInternalValue = _React$useState2[1];\n\n  useUpdateEffect(function () {\n    setInternalValue(parseToInternalValue(value));\n  }, [value]); // =========================== Label ============================\n\n  var labelRender = function labelRender(entity, val) {\n    var fieldLabel = mergedFieldNames.label;\n\n    if (!entity) {\n      var valPath = splitValue(val);\n      return displayRender(valPath, []);\n    }\n\n    if (checkable) {\n      return entity.data.node[fieldLabel];\n    }\n\n    var _restoreCompatibleVal = restoreCompatibleValue(entity, mergedFieldNames),\n        selectedOptions = _restoreCompatibleVal.options;\n\n    var rawOptions = selectedOptions.map(function (opt) {\n      return opt.node;\n    });\n    var labelList = rawOptions.map(function (opt) {\n      return opt[fieldLabel];\n    });\n    return displayRender(labelList, rawOptions);\n  }; // =========================== Change ===========================\n\n\n  var onInternalChange = function onInternalChange(newValue\n  /** Not care current type */\n  ) {\n    // TODO: Need improve motion experience\n    setMergedSearch('');\n    var valueList = checkable ? newValue : [newValue];\n    var pathList = [];\n    var optionsList = [];\n    var valueEntities = valueList.map(getEntityByValue).filter(function (entity) {\n      return entity;\n    });\n    valueEntities.forEach(function (entity) {\n      var _restoreCompatibleVal2 = restoreCompatibleValue(entity, mergedFieldNames),\n          valueOptions = _restoreCompatibleVal2.options;\n\n      var originOptions = valueOptions.map(function (option) {\n        return option.node;\n      });\n      pathList.push(originOptions.map(function (opt) {\n        return (// Here we should use original FieldNames value mapping\n          opt[outerFieldNames.value]\n        );\n      }));\n      optionsList.push(originOptions);\n    }); // Fill state\n\n    if (value === undefined) {\n      setInternalValue(valueList);\n    }\n\n    if (onChange) {\n      if (checkable) {\n        onChange(pathList, optionsList);\n      } else {\n        // TODO: This should return null as other component.\n        // But its a breaking change and we should keep the logic.\n        onChange(pathList[0] || [], optionsList[0] || []);\n      }\n    }\n  }; // ============================ Open ============================\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!onPopupVisibleChange, '`onPopupVisibleChange` is deprecated. Please use `onDropdownVisibleChange` instead.');\n    warning(popupVisible === undefined, '`popupVisible` is deprecated. Please use `open` instead.');\n    warning(popupClassName === undefined, '`popupClassName` is deprecated. Please use `dropdownClassName` instead.');\n    warning(popupPlacement === undefined, '`popupPlacement` is deprecated. Please use `placement` instead.');\n  }\n\n  var mergedOpen = open !== undefined ? open : popupVisible;\n  var mergedDropdownClassName = dropdownClassName || popupClassName;\n  var mergedPlacement = placement || popupPlacement;\n\n  var onInternalDropdownVisibleChange = function onInternalDropdownVisibleChange(nextVisible) {\n    onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextVisible);\n    onPopupVisibleChange === null || onPopupVisibleChange === void 0 ? void 0 : onPopupVisibleChange(nextVisible);\n  }; // ========================== Context ===========================\n\n\n  var context = React.useMemo(function () {\n    return {\n      changeOnSelect: changeOnSelect,\n      expandTrigger: expandTrigger,\n      fieldNames: mergedFieldNames,\n      expandIcon: expandIcon,\n      loadingIcon: loadingIcon,\n      loadData: loadData,\n      dropdownMenuColumnStyle: dropdownMenuColumnStyle,\n      search: searchConfig,\n      dropdownPrefixCls: dropdownPrefixCls\n    };\n  }, [changeOnSelect, expandTrigger, mergedFieldNames, expandIcon, loadingIcon, loadData, dropdownMenuColumnStyle, searchConfig, dropdownPrefixCls]); // =========================== Render ===========================\n\n  var dropdownStyle = // Search to match width\n  mergedSearch && searchConfig.matchInputWidth || // Empty keep the width\n  !mergedOptions.length ? {} : {\n    minWidth: 'auto'\n  };\n  return /*#__PURE__*/React.createElement(CascaderContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(RefCascader, _extends({\n    ref: cascaderRef\n  }, restProps, {\n    fieldNames: mergedFieldNames,\n    value: checkable ? internalValue : internalValue[0],\n    placement: mergedPlacement,\n    dropdownMatchSelectWidth: false,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: mergedDropdownClassName,\n    treeData: mergedOptions,\n    treeCheckable: checkable,\n    treeNodeFilterProp: \"label\",\n    onChange: onInternalChange,\n    showCheckedStrategy: RefCascader.SHOW_PARENT,\n    open: mergedOpen,\n    onDropdownVisibleChange: onInternalDropdownVisibleChange,\n    searchValue: mergedSearch // Customize filter logic in OptionList\n    ,\n    filterTreeNode: function filterTreeNode() {\n      return true;\n    },\n    showSearch: mergedShowSearch,\n    onSearch: setMergedSearch,\n    labelRender: labelRender,\n    getRawInputElement: function getRawInputElement() {\n      return children;\n    }\n  })));\n});\nCascader.displayName = 'Cascader';\nexport default Cascader;"]},"metadata":{},"sourceType":"module"}